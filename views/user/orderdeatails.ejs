<style>
 

  /* .return-reason {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-bottom: 10px;
  }

  .return-reason input[type="radio"] {
    margin-right: 5px;
  } */
</style>
<%- include ("../partilas/userheader") -%>
  <div class="container">
    <div class="table-responsive" style="margin: 90px">
      <% if (userOrder.status=="Delivered" ) { %>
        <div style="display: flex; justify-content: space-between; margin: 10px;">
          <div>
            <% if (userOrder.items.every(item=> item.isReturned)) { %>

              <% } else { %>

                <button class="mb-15 btn btn-secondary" id="returnButton">Return Order</button>
                <% } %>
                <div class="container">
                  <div id="returnReasons" style="display: none">
                    <div class="return-reason form-check">
                      <input class="form-check-input" type="radio" name="returnReason" id="productDamaged" value="Product Damaged">
                      <label class="form-check-label" for="productDamaged">Product Damaged</label>
                    </div>
                    <div class="return-reason form-check">
                      <input class="form-check-input" type="radio" name="returnReason" id="wrongSize" value="Wrong Size">
                      <label class="form-check-label" for="wrongSize">Wrong Size</label>
                    </div>
                    <div class="return-reason form-check">
                      <input class="form-check-input" type="radio" name="returnReason" id="wrongProduct" value="Wrong Product">
                      <label class="form-check-label" for="wrongProduct">Wrong Product</label>
                    </div>
                    <div class="return-reason form-check">
                      <input class="form-check-input" type="radio" name="returnReason" id="otherReason" value="Other">
                      <label class="form-check-label" for="otherReason">Other</label>
                      <input type="text" class="form-control" id="otherReasonText" placeholder="Type reason for the return" style="width: 50%; display: none;">
                    </div>
                    <div style="margin-top: 20px;">
                      <button class="btn btn-primary" id="requestReturnButton">Request Return</button>
                    </div>
                  </div>
                </div>
                
          </div>
          <div>
            <a class="btn btn-success" href="/generate-invoice?id=<%= userOrder._id %>">View Invoice</a>
          </div>
        </div>
        <% } %>
          <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
            <table class="table table-responsive shopping-summery text-center clean">
              <thead>
                <tr class="main-heading">
                  <th scope="col">Order ID</th>
                  <th scope="col">Image</th>
                  <th scope="col">Product</th>
                  <th scope="col">Unit Price</th>
                  <th scope="col">Subtotal</th>
                  <th scope="col">Status</th>
                  <th scope="col">Payment</th>
                  <% if (userOrder.status=="Delivered" ) { %>
                    <th scope="col">Return</th>
                    <% } else { %>
                      <th scope="col">Cancel</th>
                      <% } %>
                </tr>
              </thead>
              <tbody>
                <% if (userOrder && userOrder.items.length> 0) { %>

                  <% let allItemsCanceled=userOrder.items.every(item=> item.isCancelled) %>
                    <% if (allItemsCanceled || userOrder.status=="Delivered" || userOrder.status=="Returned" ||
                      userOrder.status=="Canceled" || userOrder.status=="Pending Return Request" ||
                      userOrder.status=="Payment Failed" ) { %>
                      <!-- Hide the button -->
                      <% } else { %>
                        <button class="btn btn-danger mb-15" onclick="cancelOrder('<%= userOrder._id %>')">Cancel
                          Order</button>
                        <% } %>


                          <% userOrder.items.forEach((item)=> { %>
                            <tr>
                              <td>
                                <%= userOrder.orderNumber %>
                              </td>
                              <td class="image product-thumbnail">
                                <img src="/uploads/products/<%= item.product.image[1] %>" alt="#" />
                              </td>
                              <td class="product-des product-name">
                                <h5 class="product-name">
                                  <a href="shop-product-right.html">
                                    <%= item.product.productName %>
                                  </a>
                                </h5>
                                <br />
                                <p>Quantity:<%= item.quantity %>
                                </p>
                                <p>Size:<%= item.size %>
                                </p>
                              </td>
                              <td>
                                <%= item.product.sellingPrice %>
                              </td>
                              <td>
                                <%= item.price %>
                              </td>
                              <td>
                                <% if (item.isCancelled==true) { %>
                                  Canceled
                                  <% } else if (item.isReturned==true) { %>
                                    Returned
                                    <% } else if (userOrder.status=="Delivered" ) { %>
                                      Delivered
                                      <% } else if (userOrder.status=="Pending" ) { %>
                                        Pending
                                        <% } else if (userOrder.status=="Canceled" ) { %>
                                          Cancelled
                                          <% } else if (userOrder.status=="Returned" ) { %>
                                            Returned
                                            <% } else { %>
                                              Confirmed
                                              <% } %>
                              </td>
                              <td>
                                <%= userOrder.payment %>
                              </td>
                              <% if (item.isCancelled==true||item.isReturned==true) { %>
                                <% } else if (userOrder.status=="Delivered" ) { %>
                                  <td>
                                    <button class="btn btn-secondary" id="requestReturnOneProduct"
                                      onclick="returnOneProduct('<%=item.product._id%>')">Return</button>
                                  </td>
                                  <% } else if (userOrder.status=="Canceled"
                                    ||userOrder.status=="Pending Return Request" ||userOrder.status=="Returned"
                                    ||userOrder.status=="Payment Failed" ) { %>
                                    <% } else { %>
                                      <td class="action" data-title="Remove">
                                        <a href="#"
                                          onclick="cancelOneProduct('<%=item.product._id%>','<%=userOrder.userId._id%>','<%= userOrder._id%>')"
                                          class="text-muted"><i class="fi-rs-trash"></i></a>
                                      </td>
                                      <% } %>
                            </tr>
                            <% }); %>
                              <tr>
                                <th>Coupon Discount</th>
                                <td colspan="3" class="font-xl text-brand fw-900">
                                  <%= userOrder.couponDiscount %>
                                </td>
                              </tr>
                              <tr>
                                <th>Total</th>
                                <td colspan="3" class="product-subtotal"><span class="font-xl text-brand fw-900">
                                    <%= userOrder.totalAmount %>
                                  </span></td>
                              </tr>
                              <tr>
                                <th>Status</th>
                                <td colspan="6" class="status">
                                  <% if (userOrder.items.some(item=> item.isReturned == true)) { %>
                                    order Returned
                                    <% } else if (userOrder.items.some(item=> item.isCancelled == true)) { %>
                                      order Canceled
                                      <% } else { %>
                                        <span class="font-xl text-brand fw-900">
                                          <%= userOrder.status %>
                                        </span>
                                        <% } %>
                                </td>
                              </tr>
                              <% } else { %>
                                <tr>
                                  <td colspan="5" class="text-center">No products in the order.</td>
                                </tr>
                                <% } %>
              </tbody>
            </table>
          </div>
          <% if (userOrder.status=="Payment Failed" ) { %>
            <div class="d-flex justify-content-center">
              <button class="btn btn-success" onclick="rePayment('<%=userOrder._id %>')">Re-Payment</button>
            </div>
            <% } %>
    </div>
  </div>


  <%- include("../partilas/userfooter") -%>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@latest"></script>
    <script>
      const returnButton = document.getElementById("returnButton");
      const returnReasons = document.getElementById("returnReasons");
      const otherReason = document.getElementById("otherReason");
      const requestReturnButton = document.getElementById("requestReturnButton");

      returnButton.addEventListener("click", () => {
        if (
          returnReasons.style.display === "none" ||
          returnReasons.style.display === ""
        ) {
          returnReasons.style.display = "block";
        } else {
          returnReasons.style.display = "none";
        }
      });

      requestReturnButton.addEventListener("click", () => {
        const selectedReason = document.querySelector(
          'input[name="returnReason"]:checked'
        );
        if (selectedReason) {
          if (selectedReason.id === "otherReason") {
            Swal.fire({
              title: "Reason",
              input: "text",
              inputLabel: "Please state the reason for your return",
              inputValue: "",
              showCancelButton: true,
            }).then((result) => {
              if (result.isConfirmed) {
                const userOrderId = "<%= userOrder._id%>";

                const otherReasonValue = result.value;
                console.log("Other reason:", otherReasonValue);
                $.ajax({
                  url: "/return-request",
                  method: "post",
                  data: {
                    reason: otherReasonValue,
                    userOrder: userOrderId,
                  },
                  success: (response) => {
                    if (response.status) {
                      Swal.fire({
                        title: "<span style='color: red;'>success</span>",
                        html: "<span style='color: blue;'>Your Return Request Placed</span>",
                        icon: "success",
                        timer: 2000,
                      });
                      setTimeout(() => {
                        window.history.back();
                      }, 2000);
                    }
                  },
                });
              }
            });
          } else {
            const userOrderId = "<%= userOrder._id%>";
            const reasonForReturn = selectedReason.value;
            $.ajax({
              url: "/return-request",
              method: "post",
              data: {
                reason: reasonForReturn,
                userOrder: userOrderId,
              },
              success: (response) => {
                if (response.status) {
                  Swal.fire({
                    title: "<span style='color: red;'>success</span>",
                    html: "<span style='color: blue;'>Your Return Request Placed</span>",
                    icon: "success",
                    timer: 1000,
                  });
                  window.history.back();
                }
              },
            });
          }
        } else {
          alert("Please select a return reason.");
        }
      });

      function cancelOneProduct(productId, userId, userOrder) {
        Swal.fire({
          title: "<span style='color: red;'>Are you Sure</span>",
          html: "<span style='color: black;'>Do you want cancel this Product</span>",

          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, delete it!",
        }).then((result) => {
          if (result.value == true) {
            $.ajax({
              url: "/cancelOneProduct",
              method: "post",
              data: {
                productId: productId,

                userId: userId,
                userOrder: userOrder,
              },
              success: (response) => {
                if (response.status == "items cancelled") {
                  const Toast = Swal.mixin({
                    toast: true,
                    position: "bottom",
                    showConfirmButton: false,
                    timer: 2000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                      toast.onmouseenter = Swal.stopTimer;
                      toast.onmouseleave = Swal.resumeTimer;
                    },
                  });
                  Toast.fire({
                    icon: "success",
                    title: " your items has been cancelled",
                  });
                }
                setTimeout(() => {
                  location.reload();
                }, 2100);
              },
              error: (xhr, status, error) => {
                console.error(xhr.responseText); // Log the error message to the console
                Swal.fire({
                  title: "<span style='color: red;'>Error</span>",
                  html: "<span style='color: blue;'>An error occurred while cancelling the order</span>",
                  icon: "error",
                  timer: 2000,
                });
              },
            });
          }
        });
      }

      function cancelOrder(orderId) {


        Swal.fire({
          title: "<span style='color: red;'>Are you Sure</span>",
          html: "<span style='color: black;'>Do you want cancel this order</span>",

          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, delete it!",
        }).then((result) => {
          if (result.value == true) {
            $.ajax({
              url: "/cancelOrder",
              method: "post",
              data: {
                orderId: orderId,
              },
              success: (response) => {
                if (response.status == "order canceled") {
                  Swal.fire({
                    title: "<span style='color: green;'>canceled</span>",
                    html: "<span style='color: blue;'>your order has been canceled</span>",
                    icon: "success",
                    timer: 1000,
                  });
                }
                setTimeout(() => {
                  location.href = "/order";
                }, 1200);
              },
              error: (xhr, status, error) => {
                console.error(xhr.responseText); // Log the error message to the console
                Swal.fire({
                  title: "<span style='color: red;'>Error</span>",
                  html: "<span style='color: blue;'>An error occurred while cancelling the order</span>",
                  icon: "error",
                  timer: 2000,
                });
              },
            });
          }
        });
      }

      function returnOneProduct(orderItemId) {
        // alert(orderItemId)
        Swal.fire({
          title: "Reason",
          input: "text",
          inputLabel: "Please state the reason for your return",
          inputValue: "",
          showCancelButton: true,
        }).then((result) => {
          if (result.isConfirmed) {
            const userOrderId = "<%= userOrder._id%>";

            const ReasonValue = result.value;
            console.log("Other reason:", ReasonValue);
            $.ajax({
              url: "/returnOneProduct",
              method: "post",
              data: {
                reason: ReasonValue,
                userOrder: userOrderId,
                itemProductId: orderItemId
              },
              success: (response) => {
                if (response.status == true) {
                  Swal.fire({
                    title: "<span style='color: red;'>success</span>",
                    html: "<span style='color: blue;'>Your Return Request Placed</span>",
                    icon: "success",
                    timer: 2000,
                  });
                  setTimeout(() => {
                    window.location.reload();
                  }, 2000);
                }
              }, error: (xhr, status, error) => {
                Swal.fire({
                  title: "<span style='color: red;'>Error</span>",
                  html: "<span style='color: blue;'>An error occurred while returning the order</span>",
                  icon: "error",
                  timer: 2000,
                });
              }
            });
          }

        })
      }
      function rePayment(orderId) {
        alert("hi");
        $.ajax({
          url: `/rePayment?id=${orderId}`,
          method: "post",
          success: (response) => {
            if (response.status == true) {
              alert(response.CartData)
              razorPayPayment(response.generateRazor, response.userOrder, response.CartData)
            }
          },
          error: (xhr, status, error) => {
            // Handle error response here
          }
        });
      }
      function razorPayPayment(RazorPayOrderID, userOrder, CartData) {
        alert("hi it fromo the paymet")
        const amount = RazorPayOrderID.amount;
        const userOrderId = RazorPayOrderID.receipt;
        const razorPayOrderId = RazorPayOrderID.id;
        // alert(razorPayOrderId);
        // alert(amount);
        // alert(userOrderId);
        // alert(user);
        // alert(user.username);
        var options = {
          "key": "rzp_test_SWPaqecbwGGJZa",
          "amount": amount,
          "currency": "INR",
          "name": "Duck & Wave",
          "description": "Test Transaction",
          "image": "https://example.com/your_logo",
          "order_id": razorPayOrderId,
          "handler": function (response) {
            $.ajax({
              url: "/razorPayVerify",
              method: "post",
              data: {
                response: response,
                razorPayOrderId: razorPayOrderId,
                userOrder: userOrder,
                cartId: CartData
              },
              success: function (data) {
                if (data.status) {

                  location.href = "/orderSuccess"
                } else {
                  Swal.fire({
                    title: "<span style='color: red;'>payment filed</span>",
                    html: data.error,
                    icon: "error",
                    timer: 3000
                  });
                  setTimeout(() => {
                    location.href = "/cart"
                  }, 3100);
                }
              }
              ,
              error: function (error) {
                console.error("Error in AJAX call");
                console.error(error);
                alert("Error");
              }
            });
          },
          "prefill": {
            "name": "",
            "email": "",
            "contact": ""
          },
          "notes": {
            "address": "Razorpay Corporate Office"
          },
          "theme": {
            "color": "#095a40"
          }
        };

        var rzp1 = new Razorpay(options);
        rzp1.on('payment.failed', function (response) {
          $.ajax({
            url: "/razorapayFailed",
            method: "post",
            data: {
              userOrder: userOrder
            }, success: ((response) => {

            })
          })

          // alert(response.error.code);
          // alert(response.error.description);
          // alert(response.error.source);
          // alert(response.error.step);
          // alert(response.error.reason);
          // alert(response.error.metadata.order_id);
          // alert(response.error.metadata.payment_id);

          // Swal.fire({
          //     title: "<span style='color: red;'>payment filed</span>",
          //     html: response.error.reason,
          //     icon: "error",
          //     timer: 3000
          // });
        });
        rzp1.open();
      }


    </script>