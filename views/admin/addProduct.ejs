<%- include ("../partilas/admin") %>

    <section class="content-main">
        <form method="post" action="/admin/addproduct" id="form" enctype="multipart/form-data">
            <% if (locals.message) { %>
                <p>
                    <%= message %>
                </p>
                <% } %>
                    <div class="row">
                        <div class="col-9">
                            <div class="content-header">
                                <h2 class="content-title">Add New Product</h2>

                            </div>
                        </div>
                        <div class="col-lg-6" style="width: 100%;">
                            <div class="card mb-4">
                                <div class="card-body">
                                    <!-- <div class="mb-4">
                                        <label for="product_title" class="form-label">Product ID</label>
                                        <input type="text" name="productId" placeholder="Type here"
                                            onblur="validateId()" class="form-control" id="product_id">
                                        <p id="productError" class="text-danger "></p>
                                    </div> -->
                                    <div class="mb-4">
                                        <label for="product_title" class="form-label">Product title</label>
                                        <input type="text" name="productName" placeholder="Type here"
                                            onblur="validateTittle()" class="form-control" id="product_title">
                                        <p id="productTitleError" class="text-danger "></p>
                                    </div>
                                    <div class="row gx-3">
                                        <div class="col-md-4  mb-3">
                                            <label for="product_color" class="form-label">Color</label>
                                            <input type="text" placeholder="Type here" name="color"
                                                onkeyup="validateColor()" class="form-control" id="product_color">
                                            <p id="productColorError" class="text-danger "></p>
                                        </div>



                                        <!-- <  CHECK BOX -->
                                        <div class="col-md-4 mb-3">
                                            <label for="sizeS" class="form-label">Size S:</label>
                                            <input type="number" id="sizeS" name="sizeS" required class="form-control"
                                                min="1" max="500" placeholder="Enter the quantity">
                                        </div>

                                        <div class="col-md-4 mb-3">
                                            <label for="sizeM" class="form-label">Size M:</label>
                                            <input type="number" id="sizeM" name="sizeM" required="quantity error"
                                                class="form-control" min="1" max="500" placeholder="Enter the quantity">
                                        </div>

                                        <div class="col-md-4 mb-3">
                                            <label for="sizeL" class="form-label">Size L:</label>
                                            <input type="number" id="sizeL" name="sizeL" required class="form-control"
                                                min="1" max="500" placeholder="Enter the quantity">
                                        </div>

                                        <div class="col-md-4 mb-3">
                                            <label for="sizeXL" class="form-label">Size XL:</label>
                                            <input type="number" id="sizeXL" name="sizeXL" required class="form-control"
                                                min="1" max="500" placeholder="Enter the quantity">
                                        </div>

                                        <div class="mb-4" style="width:20%;">
                                            <label class="form-label">Price</label>
                                            <input type="number" name="price" placeholder="Type here"
                                                onblur="validatePrice()" class="form-control" id="product_price">
                                            <p id="productPriceError" class="text-danger "></p>
                                        </div>
                                        <div class="mb-4" style="width:20%;">
                                            <label class="form-label">Selling price</label>
                                            <input type="number" name="sellingPrice" onchange="validateSellingPrice()"
                                                placeholder="Type here" class="form-control" id="sellingPrice">
                                            <p id="sellingPriceError" class="text-danger "></p>
                                        </div>
                                        <div class="mb-4">
                                            <label class="form-label">category</label>
                                            <select class="form-select" name="categories">
                                                <% if (locals.category) { %>
                                                    <% for( let i=0; i < category.length; i++ ) { %>
                                                        <option value="<%=category[i]._id %>">
                                                            <%=category[i].categoryTitle %>
                                                        </option>


                                                        <% } %>

                                                            <% } %>

                                            </select>
                                        </div>
                                    </div>

                                </div>
                            </div> <!-- card end// -->
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div>
                                        <label class="form-label">Description</label>
                                        <input type="text" name="description" placeholder="Type here"
                                            onblur="validateDescription()" class="form-control" id="product_Description"
                                            rows="4">
                                        <p id="productDescriptionError" class="text-danger "></p>
                                    </div>
                                </div>
                            </div> <!-- card end// -->
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div>
                                        <label class="form-label">Images</label>
                                        <input class="form-control" name="images" type="file" accept="image/*"
                                            id="imageInput" multiple>
                                        <div id="imagePreviewContainer" style="display: none;">
                                            <div id="imagePreviews" style="width: 100px;"></div>
                                            <button id="deselectButton">Deselect All</button>

                                            <p id="imageValidationError" style="color: red; display: none;"></p>

                                        </div>


                                    </div>
                                </div>
                            </div>
                            <div class="text-center">
                                <!-- <button class="btn btn-light rounded font-sm mr-5 text-body hover-up">Save to draft</button> -->
                                <input type="submit" value="submit" class="btn btn-success">
                                <p id="submitError" class="text-danger error"></p>
                            </div> <!-- card end// -->
                        </div>

        </form>
    </section>

    <script>
        const product_title = document.getElementById("product_title")
        const product_color = document.getElementById("product_color")
        const size = document.getElementsByClassName("size")
        const product_Description = document.getElementById("product_Description")
        const productPrice = document.getElementById("product_price")
        const sellingPrice = document.getElementById("sellingPrice")
        const productTitleError = document.getElementById("productTitleError")
        const productColorError = document.getElementById("productColorError")
        const sizeError = document.getElementsByClassName("sizeError")
        const productDescriptionError = document.getElementById("productDescriptionError")
        const productPriceError = document.getElementById("productPriceError")
        const sellingPriceError = document.getElementById("sellingPriceError")
        const input = document.getElementById("imageInput")
        const errorDisplay = document.getElementById('imageValidationError');

  
        function validateTittle() {
            const productName = product_title.value.trim()
            if (productName == "") {
                productTitleError.style.display = "block"
                productTitleError.innerHTML = "product Name must be required"
            } else if (productName.length > 50) {
                productTitleError.style.display = "block"
                productTitleError.innerHTML = "product Name must be short"
            } else {
                productTitleError.innerHTML = ""
                productTitleError.style.display = "none"
            }
        }

        function validateColor() {
            const color = product_color.value.trim()
            if (color == '') {
                productColorError.style.display = "block"
                productColorError.innerHTML = "this flied must be required"
            } else if (color.length > 20) {
                productColorError.style.display = "block"
                productColorError.innerHTML = "color must valid"
            } else {
                productColorError.style.display = "none"
                productColorError.innerHTML = ""
            }
        }

        function validateDescription() {
            const description = product_Description.value.trim()
            if (description == "") {
                productDescriptionError.style.display = "block"
                productDescriptionError.innerHTML = "Product Description must be required"
            } else if (description.length < 10) {
                productDescriptionError.style.display = "block"
                productDescriptionError.innerHTML = "Product Description is short"
            } else {
                productDescriptionError.style.display = "none"
                productDescriptionError.innerHTML = ""
            }
        }
        function validatePrice() {
            const price = productPrice.value
            if (price === "") {
                productPriceError.style.display = "block";
                productPriceError.innerHTML = "Invalid price 1";
            } else if (price < 0) {
                productPriceError.style.display = "block";

                productPriceError.innerHTML = "Invalid price 2";
            } else {
                productPriceError.style.display = "none";
                productPriceError.innerHTML = "";


            }
        }




        function validateSellingPrice() {

            const price = productPrice.value;
            const selling = sellingPrice.value


            if (selling === "") {
                sellingPriceError.style.display = "block"
                sellingPriceError.innerHTML = "its must be required!"
            }
            else if (selling > price) {

                sellingPriceError.style.display = "block"
                sellingPriceError.innerHTML = "INvalid price1!"
            } else if (selling < 0) {

                sellingPriceError.style.display = "block"
                sellingPriceError.innerHTML = "INvalid price3!"
            }
            else {

                sellingPriceError.style.display = "none"
                sellingPriceError.innerHTML = ""
            }
        }
        function validateImages() {
    errorDisplay.style.display = 'none';

    const files = input.files;


    if (files.length > 5) {
        errorDisplay.style.display = 'block';
        errorDisplay.innerHTML = 'Image limit is 5';
        return false;
    }
}



        document.getElementById("form").addEventListener("submit", (e) => {




            validateTittle()

            validateColor()

            validatePrice()


            validateDescription()

            validateSellingPrice()
            validateImages()




            // productError.innerHTML ||
            if (productTitleError.innerHTML || productColorError.innerHTML || productPriceError.innerHTML || productDescriptionError.innerHTML || sellingPriceError.innerHTMl || errorDisplay.innerHTML) {

                e.preventDefault();
            } else {



            }
        })

        const imageInput = document.getElementById('imageInput');
        const imagePreviews = document.getElementById('imagePreviews');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');
        const deselectButton = document.getElementById('deselectButton');


        imageInput.addEventListener('change', function (event) {
            const files = event.target.files;

            if (files) {
                imagePreviews.innerHTML = '';


                Array.from(files).forEach(file => {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const imgElement = document.createElement('img');
                        imgElement.src = e.target.result;
                        imgElement.classList.add('previewImage');
                        imagePreviews.appendChild(imgElement);
                    };
                    reader.readAsDataURL(file);
                });
                imagePreviewContainer.style.display = 'block';
            }
        });


        deselectButton.addEventListener('click', function () {
            imageInput.value = '';
            imagePreviews.innerHTML = '';
            imagePreviewContainer.style.display = 'none';
        });

    </script>